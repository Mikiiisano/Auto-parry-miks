local autoParryEnabled = false -- Variable para habilitar/deshabilitar el auto parry
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local parryAnimation = Instance.new("Animation")
parryAnimation.AnimationId = "rbxassetid://PARA_EL_ID_DE_ANIMACION_DE_PARADA" -- Cambia esto por el ID de la animación de parry

local function onParry()
    if autoParryEnabled then
        -- Detectar si la bola está cerca
        local ball = workspace:FindFirstChild("Ball") -- Asegúrate de que "Ball" sea el nombre correcto del objeto de la bola
        if ball and (ball.Position - character.PrimaryPart.Position).magnitude < 5 then
            local animation = character.Humanoid:LoadAnimation(parryAnimation)
            animation:Play()
            wait(0.5) -- Ajusta el tiempo según la duración de la animación
        end
    end
end

local function toggleAutoParry()
    autoParryEnabled = not autoParryEnabled
    if autoParryEnabled then
        print("Auto parry activado")
    else
        print("Auto parry desactivado")
    end
end

-- Crear el botón de encendido/apagado
local ScreenGui = Instance.new("ScreenGui")
local ToggleButton = Instance.new("TextButton")

ScreenGui.Parent = game.CoreGui
ToggleButton.Size = UDim2.new(0, 100, 0, 50)
ToggleButton.Position = UDim2.new(0, 10, 0, 10)
ToggleButton.Text = "Toggle Auto Parry"
ToggleButton.Parent = ScreenGui

ToggleButton.MouseButton1Click:Connect(toggleAutoParry)

-- Conectar la función onParry a un evento de render
game:GetService("RunService").RenderStepped:Connect(onParry)
