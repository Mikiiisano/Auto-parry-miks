-- Variables principales
local autoParryEnabled = false
local proximityThreshold = 10 -- Distancia de detección de la bola
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- Crear botón para encender/apagar el auto-parry
local UIS = game:GetService("UserInputService")
local screenGui = Instance.new("ScreenGui")
local toggleButton = Instance.new("TextButton")

screenGui.Parent = game.CoreGui
toggleButton.Parent = screenGui
toggleButton.Text = "Auto-Parry: OFF"
toggleButton.Size = UDim2.new(0, 200, 0, 50)
toggleButton.Position = UDim2.new(0.5, -100, 0.9, -25)
toggleButton.BackgroundColor3 = Color3.new(1, 0, 0)

-- Función para detectar si la bola está cerca
local function isBallNearby()
    for _, obj in pairs(workspace:GetChildren()) do
        if obj:IsA("Part") and obj.Name == "Ball" then
            local distance = (obj.Position - rootPart.Position).Magnitude
            if distance <= proximityThreshold then
                return true
            end
        end
    end
    return false
end

-- Función de auto-parry
local function autoParry()
    if autoParryEnabled and isBallNearby() then
        humanoid:MoveTo(rootPart.Position + Vector3.new(0, 0, 1)) -- Acción simulada de "parry"
    end
end

-- Activar/desactivar auto-parry
toggleButton.MouseButton1Click:Connect(function()
    autoParryEnabled = not autoParryEnabled
    if autoParryEnabled then
        toggleButton.Text = "Auto-Parry: ON"
        toggleButton.BackgroundColor3 = Color3.new(0, 1, 0)
    else
        toggleButton.Text = "Auto-Parry: OFF"
        toggleButton.BackgroundColor3 = Color3.new(1, 0, 0)
    end
end)

-- Loop para verificar la proximidad de la bola
while true do
    if autoParryEnabled then
        autoParry()
    end
    wait(0.1) -- Control de intervalo para no sobrecargar el script
end
